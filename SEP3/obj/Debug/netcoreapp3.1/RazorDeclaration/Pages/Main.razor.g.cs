#pragma checksum "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6bb536d393ccf25261da395eb00ed60b633ea113"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace SEP3.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 2 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using SEP3;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using SEP3.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using SEP3.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using SEP3.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/main")]
    public partial class Main : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 125 "C:\Users\mathi\OneDrive\Skrivebord\2020Collection\SEP3\Pages\Main.razor"
       

    public Book book { get; set; }
    public List<Book> bookList;
    IFileListEntry file;
    string value="ListBox";
    string categoryName;
    IEnumerable<string> categoryList;


    protected override async Task OnInitializedAsync()
    {

        categoryList = new string[] { "Math", "Biology","Physics","Chemistry","Geography","Literature","Costruction","Marketing" };
        book = new Book();
        Book[] temp = await bookServce.GetAllBookAsync();

        bookList = new List<Book>();
        foreach (var bookarr in temp)
        {
            bookList.Add(bookarr);
        };

        //TODO: google ServerCertificateCustomValidationCallback when you realise that it cannot accept self signed certificates
        HttpResponseMessage response = await httpClient.GetAsync("https://localhost:8443/OnlineLibrary/main");
        Console.WriteLine(response.IsSuccessStatusCode);
        string responseBody = await response.Content.ReadAsStringAsync();
        var print = book.getJson(responseBody);
        //TODO Work on it tommorow: Display the file from the api
        //var plzwork = JsonSerializer.Deserialize<Object>(response.Content.);
        Console.WriteLine($"response body: {responseBody.ToString()}");

    }

    public void SaveBook()
    {
        var title = book.Name;
        Book temp = new Book();
        temp.Name = title;
        bookList.Add(temp);
        book = new Book();

    }


    void HandleFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
    }

    async void UploadFile()
    {
        Files temp = new Files();
        temp.filename = file.Name;
        temp.format = file.Type;
        temp.filesize = (int)file.Size;
        var ms = new MemoryStream();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            await file.Data.CopyToAsync(ms);

        }
        DateTime timestamp = new DateTime();
        byte[] byteArray = ms.ToArray();
        String fileUsername = await sessionStorage.GetItemAsync<string>("username");
        Files file1 = new Files { filename = file.Name, username = fileUsername, uploadDate = timestamp.Date, format=file.Type,
            filesize= (int)file.Size,category=categoryName ,mybytearray = byteArray,};
        
        string fileJsonToSend = JsonSerializer.Serialize(file1);

        HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Post, "OnlineLibrary/add");
        request.Content = new StringContent(fileJsonToSend);

        Console.WriteLine("SendingFile " + file.Data);

        HttpResponseMessage response = await httpClient.SendAsync(request);
        Console.WriteLine("Response status:" + response.StatusCode);
    }
    void Change(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
        categoryName = str.ToString();
        Console.WriteLine(categoryName);
        StateHasChanged();
    }
   


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.SessionStorage.ISessionStorageService sessionStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private BookService bookServce { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUserService userService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient httpClient { get; set; }
    }
}
#pragma warning restore 1591
