@page "/library"
@using SEP3.Data
@using SEP3.Services
@inject HttpClient httpClient
@inject SEP3.Services.BookService bookServce

<div class="col-12">
    <h3><b>Enter Book Information</b></h3>
    <hr />


    <EditForm Model="@book" OnValidSubmit="@SaveBook">
        <DataAnnotationsValidator />

        <div class="col-12 row">
            <label class="col-2 font-weight-bold">Title : </label>
            <InputText class="form-control col-3" @bind-Value="book.Title" placeholder="title" />
            &nbsp;<ValidationMessage For="@(() => book.Title)" />
        </div>
        <br />
        <div class="col-12 row">
            <label class="col-2 font-weight-bold">Author : </label>
            <InputText class="form-control col-3" @bind-Value="book.Author" placeholder="author" />
            &nbsp;<ValidationMessage For="@(() => book.Author)" />
        </div>
        <br />
        <div class="col-12 row">
            <span class="col-2"></span>
            <input type="submit" class="form-control col-1 btn btn-primary" value="Save" />
            <span>&nbsp;</span>
            <input type="submit" class="form-control col-1 btn btn-primary" value="Clear" />
        </div>
    </EditForm>
</div>
<br />
<br />
<h2 class="font-weight-bolder font-italic">Your List of Books</h2>
<table class="table">
    <thead>
        <tr>
            <th>Title of Book</th>
            <th>Author</th>
        </tr>
    </thead>
    <tbody>
        @if (bookList != null)
        {
            foreach (var book in bookList)
            {
                <tr>
                    <td>@book.Title</td>
                    <td>@book.Author</td>

                </tr>
            }
        }

    </tbody>
</table>


@code {

    public Book book { get; set; }
    public List<Book> bookList;


    protected override async Task OnInitializedAsync()
    {

        book = new Book();
        Book[] temp = await bookServce.GetAllBookAsync();
     //   HttpResponseMessage response = await httpClient.GetAsync("https://localhost:8080/");
       // string responseBody = await response.Content.ReadAsStringAsync();
        //var print = book.getJson(responseBody);
        //Console.WriteLine(print.ToString());
        bookList = new List<Book>();
        foreach (var bookarr in temp)
        {
            bookList.Add(bookarr);
        }
    }

    public void SaveBook()
    {
        var title = book.Title;
        var author = book.Author;
        Book temp = new Book();
        temp.Title = title;
        temp.Author = author;
        bookList.Add(temp);
        book = new Book();

    }

}